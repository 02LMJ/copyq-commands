[Command]
Name=Convert Markdown to ...
Command="
    copyq:
    // # get input text to be converted
    
    var markdown = str(input());
    if (!markdown) {
        copy();
        markdown = clipboard();
    }
    
    // # get conversion options from user
    
    var renderers = {
        'HTML': 'mistletoe.html_renderer.HTMLRenderer',
        'HTML + code highlighting': 'contrib.pygments_renderer.PygmentsRenderer', // requires: `pip3 install pygments`
        'HTML + GitHub Wiki': 'contrib.github_wiki.GithubWikiRenderer',
        'HTML + MathJax': 'contrib.mathjax.MathJaxRenderer',
        'Jira': 'contrib.jira_renderer.JIRARenderer',
        'JSON (AST)': 'mistletoe.ast_renderer.ASTRenderer',
        'LaTeX': 'mistletoe.latex_renderer.LaTeXRenderer',
    }
    
    var settingsPrefix = 'convert-markdown/';
    var optFormat = 'Target format';
    var optAddToHistory = 'Add result to clipboard history';
    
    var format = settings(settingsPrefix + optFormat);
    var addToHistory = settings(settingsPrefix + optAddToHistory) == 'true';
    
    var options = dialog(
        '.title', 'Convert Markdown to ...',
        '.defaultChoice', format,
        optFormat, Object.keys(renderers),
        optAddToHistory, addToHistory
    );
    
    if (!options) {
        abort();
    }
    
    // # parse and store the options
    
    format = options[optFormat];
    addToHistory = options[optAddToHistory];
    
    settings(settingsPrefix + optFormat, format);
    settings(settingsPrefix + optAddToHistory, addToHistory);
    
    // # do the conversion
    
    function tempFile(content) {
        var file = new TemporaryFile();
        file.openWriteOnly();
        file.write(content);
        file.close();
        return file;
    }
    
    var mdFile = tempFile(markdown);
    
    var cmdRes = execute('python', '-m', 'mistletoe', mdFile.fileName(), '--renderer', renderers[format]);
    
    if (!cmdRes || cmdRes.exit_code != 0) {
        popup('', 'Conversion failed: ' + (cmdRes ? str(cmdRes.stderr) : 'Python executable is probably not available?'), -1);
        fail();
    }
    
    // # store conversion result
    
    var output = str(cmdRes.stdout);
    if (addToHistory) {
        add(output);
    }
    copy(output);
    
    popup('', 'Markdown successfully converted to ' + format + '!');
    "
InMenu=true
IsGlobalShortcut=true
Icon=\xf103
GlobalShortcut=meta+alt+c
