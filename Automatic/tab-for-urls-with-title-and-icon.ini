[Command]
Automatic=true
Command="
    copyq:
    var tabName = '&url'

    function lower(data) {
      return str(data).toLowerCase()
    }

    function isHtml(reply) {
      var headers = reply.headers
      for (var i in headers) {
        var header = headers[i]
        if (lower(header[0]) === 'content-type')
           return lower(header[1]).indexOf(mimeHtml) === 0
      }
      return false
    }

    function grep(content, re) {
      return content ? (re.exec(content) || [])[1] : ''
    }

    function getTitle(content) {
      return grep(content, /<title>([^<]*)<\\/title>/i)
    }

    function getFavicon(content) {
      var iconLine = grep(content, /<link([^>]*rel=[\"'](?:shortcut )?icon[\"'][^>]*)/i)
      var icon = grep(iconLine, /href=[\"']([^\"']*)/i)

      if (icon && icon[0] === '/') {
        if (icon[1] === '/') {
          var i = url.search(/\\/\\//)
          var protocol = i == -1 ? 'http:' : url.substr(0, i)
          icon = 'http:' + icon
        } else {
          var baseUrl = url.substr(0, url.search(/[^\\/:](\\/|$)/) + 1)
          icon = baseUrl + icon
        }
      }

      return icon ? networkGet(icon).data : ''
    }

    tab(tabName)

    var url = str(input()).trim()

    // URL already added? (Just check the top of the list.)
    if (url === str(read(0)))
      abort()

    // Fetch HTML.
    var reply = networkGet(url)
    if (isHtml(reply)) {
      var content = str(reply.data)

      var title = getTitle(content)
      var icon = getFavicon(content)

      write(
        mimeText, url,
        mimeItemNotes, title || '',
        'application/x-copyq-item-icon', icon
      )
    } else {
      write(mimeText, url)
    }"
Icon=\xf0c1
Input=text/plain
Match=^https?://
Name=Tab for URLs with Title and Icon
