[Commands]
1\Command="
    /*
    This adds support for Sway Wayland compositor.

    Requires `ydotool` utility to send copy/paste shortcuts to applications.

    Requires `grim` for taking screenshots and `slurp` for selecting screenshot area.

    Global shortcut commands can be triggered with:

        copyq triggerGlobalShortcut {COMMAND NAME}

    Links:
    - https://github.com/ReimuNotMoe/ydotool
    - https://github.com/emersion/grim
    - https://github.com/emersion/slurp
    */

    function run() {
        var p = execute.apply(this, arguments)
        if (!p) {
            throw 'Failed to start ' + arguments[0]
        }
        if (p.exitCode && p.stderr.length) {
            throw 'Failed command ' + arguments[0] + ': ' + str(p.stderr)
        }
        return p.stdout
    }

    function swayGetTree() {
        var tree = run('swaymsg', '-t', 'get_tree')
        return JSON.parse(str(tree))
    }

    function swayFindFocused(tree) {
        var nodes = tree['nodes'].concat(tree['floating_nodes'])
        for (var i in nodes) {
            var node = nodes[i]
            if (node['focused'])
                return node
            var focusedNode = swayFindFocused(node)
            if (focusedNode)
                return focusedNode
        }
        return undefined
    }

    function sendShortcut(shortcut) {
        run('ydotool', 'key', shortcut)
    }

    global.currentWindowTitle = function() {
        var tree = swayGetTree()
        var focusedNode = swayFindFocused(tree)
        return focusedNode ? focusedNode['name'] : ''
    }

    global.paste = function() {
        sendShortcut('shift+insert')
    }

    var copy_ = global.copy
    global.copy = function() {
        if (arguments.length == 0) {
            sendShortcut('ctrl+c')
        } else {
            copy_.apply(this, arguments)
        }
    }

    global.focusPrevious = function() {
        hide()
    }

    var onClipboardChanged_ = onClipboardChanged
    onClipboardChanged = function() {
        var title = currentWindowTitle()
        if (title)
            setData(mimeWindowTitle, title)
        onClipboardChanged_()
    }

    screenshot = function(format, screenName) {
        return run('grim', '-c', '-t', format || 'png', '-')
    }

    screenshotSelect = function(format, screenName) {
        var geometry = run('slurp')
        geometry = str(geometry).trim()
        return run('grim', '-c', '-g', geometry, '-t', format || 'png', '-')
    }

    global.triggerGlobalShortcut = function(commandName) {
        var cmds = commands()
        for (var i in cmds) {
            var cmd = cmds[i]
            if (cmd.isGlobalShortcut && cmd.name == commandName)
                return run('copyq', undefined, cmd.cmd)
        }
        throw 'Failed to find global command with given name'
    }"
1\Icon=\xf2d0
1\IsScript=true
1\Name=Sway Support
2\Command="
    copyq:
    copy(mimeItems, input())
    focusPrevious()
    paste()"
2\Enable=false
2\Icon=\xf328
2\InMenu=true
2\Input=application/x-copyq-item
2\Name=Paste Items when Activated
2\Shortcut=enter, return
size=2
